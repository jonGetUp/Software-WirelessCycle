/****************************************************************************************************************//**
 * Copyright (C) Hes-so VALAIS/WALLIS, HEI Sion, Infotronics. 2019
 * Created by Patrice Rudaz
 * All rights reserved.
 *
 * \file    blegapobserver.h
 *
 * \addtogroup BLE
 * \{
 *
 * \class   ble::BleGapObserver
 * \brief   Abstract class defining the generic Observer Interface dedicated to the class Gap...
 *
 * Initial author: Patrice Rudaz
 * Creation date: 2016-08-24
 *
 * \author  Patrice Rudaz (patrice.rudaz@hevs.ch)
 * \date    July 2018
 ********************************************************************************************************************/
#pragma once

/* **************************************************************************************************************** */
/*                                                                                                                  */
/* Header files                                                                                                     */
/*                                                                                                                  */
/* **************************************************************************************************************** */
#include <ble.h>
#include <ble_gap.h>
#include <ble_types.h>

/* **************************************************************************************************************** */
/*                                                                                                                  */
/* APPLICATION defintion                                                                                            */
/*                                                                                                                  */
/* **************************************************************************************************************** */

/* **************************************************************************************************************** */
/*                                                                                                                  */
/* NAMESPACE Declaration                                                                                            */
/*                                                                                                                  */
/* **************************************************************************************************************** */
namespace ble 
{

    /* ************************************************************************************************************ */
    /*                                                                                                              */
    /* Class Declaration                                                                                            */
    /*                                                                                                              */
    /* **************************************************************************************************************/
    class Gap;
    class BleGapObserver
    {
    public:
        /* ******************************************************************************************************** */
        /*                                                                                                          */
        /* PUBLIC DECLARATION SECTION                                                                               */
        /*                                                                                                          */
        /* ******************************************************************************************************** */
        /********************************************************************************************************//**
         * \name    GAPConnParamUpdate GAP Connection Parameter Update Observers
         * \brief   GAP Connection Parameter Callback's
         * \{
         ************************************************************************************************************/
        // -------------------------------------------------------------------------------------------------------
        virtual void onGapConnParamUpdate(Gap* gap, uint16_t connHandle) = 0;

        // -------------------------------------------------------------------------------------------------------
        virtual void onGapConnParamUpdateError(Gap* gap, uint32_t errCode) = 0;
        /** \} */

        /********************************************************************************************************//**
         * \name    GAPConnEvent GAP Connection's Event Observers
         * \brief   GAP Connection and Security Callback's
         * \{
         ************************************************************************************************************/
        // -------------------------------------------------------------------------------------------------------
        virtual void onGapConnected(Gap* gap, uint16_t connHandle) = 0;

        // -------------------------------------------------------------------------------------------------------
        virtual void onGapDisconnected(Gap* gap, uint16_t connHandle) = 0;

        // -------------------------------------------------------------------------------------------------------
        virtual void onGapPasskeyDisplay(Gap* gap, uint16_t connHandle, char* passkey) = 0;

        // -------------------------------------------------------------------------------------------------------
        virtual void onGapAuthenticationStatus(Gap* gap, uint16_t connHandle, ble_gap_evt_auth_status_t authStatus) = 0;
        /** \} */
    };

}   // namespace ble

/** \} */
