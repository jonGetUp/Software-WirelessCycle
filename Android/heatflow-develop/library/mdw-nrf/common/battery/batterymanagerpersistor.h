/****************************************************************************************************************//**
 * Copyright (C) Hes-so VALAIS/WALLIS, HEI Sion, Infotronics. 2019
 * Created by Cyril Praz, Patrice Rudaz
 * All rights reserved.
 *
 * \file    batterymanagerpersistor.h
 *
 * \addtogroup Battery
 * \{
 *
 * \class   BatteryManagerPersistor
 * \brief   Class that handles Battery Manager's parameters to be saved and restore before and after DFU...
 *
 * \author  Patrice Rudaz (patrice.rudaz@hevs.ch)
 * \version 2.0.0
 * \date    February 2018
 ********************************************************************************************************************/
#pragma once

/* **************************************************************************************************************** */
/*                                                                                                                  */
/* Header files                                                                                                     */
/*                                                                                                                  */
/* **************************************************************************************************************** */

#if (USE_BATTERY_MANAGER != 0)
#include <stdint.h>


/* **************************************************************************************************************** */
/*                                                                                                                  */
/* APPLICATION definition                                                                                           */
/*                                                                                                                  */
/* **************************************************************************************************************** */

/* **************************************************************************************************************** */
/*                                                                                                                  */
/* NAMESPACE Declaration                                                                                            */
/*                                                                                                                  */
/* **************************************************************************************************************** */
namespace battery 
{
    /* ************************************************************************************************************ */
    /*                                                                                                              */
    /* Class Declaration                                                                                            */
    /*                                                                                                              */
    /* ************************************************************************************************************ */
    class BatteryManagerPersistor
    {
    public:
        /* ******************************************************************************************************** */
        /*                                                                                                          */
        /* CONSTRUCTOR SECTION                                                                                      */
        /*                                                                                                          */
        /* ******************************************************************************************************** */
        inline BatteryManagerPersistor() : _chargingCyclesCounter(0) {};

        /* ******************************************************************************************************** */
        /*                                                                                                          */
        /* PUBLIC DECLARATION SECTION                                                                               */
        /*                                                                                                          */
        /* ******************************************************************************************************** */
        /********************************************************************************************************//**
         * \brief   Serialisation of the class
         ************************************************************************************************************/
        inline uint32_t* data()                         { return reinterpret_cast<uint32_t*>(this); }

        /********************************************************************************************************//**
         * \return  Retrieves the counter of charging cycles.
         ************************************************************************************************************/
        inline uint32_t chargingCyclesCounter() const   { return _chargingCyclesCounter; }

        /********************************************************************************************************//**
         * \brief   Increments the counter of charging cycles.
         ************************************************************************************************************/
        inline void incrChargingCyclesCounter()         { ++_chargingCyclesCounter; }

        /********************************************************************************************************//**
         * \brief   Increments the counter of single-click done on the button.
         ************************************************************************************************************/
        inline void decrChargingCyclesCounter()         { --_chargingCyclesCounter; }

    private:
        /* ******************************************************************************************************** */
        /*                                                                                                          */
        /* PRIVATE DECLARATION SECTION                                                                              */
        /*                                                                                                          */
        /* ******************************************************************************************************** */
        // Attributes
        uint32_t    _chargingCyclesCounter;
    };

}  // Namespace battery

#endif // #if (USE_BATTERY_MANAGER != 0)

/** \} */   // Group: Battery
